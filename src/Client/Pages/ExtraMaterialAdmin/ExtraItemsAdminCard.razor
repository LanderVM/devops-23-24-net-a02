@using shared.Equipment;

<MudCard Style="height: 100%;" data-test-id="extras-admin-extra-card">
    <div style="height: 100%; display: flex; flex-direction: column;">
        <MudCardMedia Image=@ImageUrl Height="250" />
        <MudCardContent>
            <MudText Typo="Typo.h5" Class="mb-2" data-test-id="extras-admin-extra-card-title">@Title</MudText>
            @foreach (string i in Attributes)
            {
                <MudText Typo="Typo.body2" Class="mb-3">@i</MudText>
            }
            <MudText Typo="Typo.body2" Class="mb-3" data-test-id="extras-admin-extra-card-price">€ @(Decimal.Round(Price, 2))/72uur</MudText>
            <MudText Typo="Typo.body2" Class="mb-3" data-test-id="extras-admin-extra-card-stock">@Stock in stock</MudText>
            @if (IsActive==true)
            {
                <MudText Typo="Typo.body2" Class="mb-1">Is actief</MudText>
            }else
            {
                <MudText Typo="Typo.body2" Class="mb-1">Is niet actief</MudText>
            }

        </MudCardContent>
        <MudCardActions Class="mt-auto">
            <MudGrid>
                @if (!wantToRemove)
                {
                    <MudItem xs="12">
                        <MudButton OnClick="UpdateCard" Class="mb-n4" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" data-test-id="extras-admin-extra-card-update-button">Aanpassen</MudButton>
                    </MudItem>
                    <MudItem xs="12">
                        <MudButton OnClick="ChangeWantToRemove" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" data-test-id="extras-admin-extra-card-remove-button">Verwijderen</MudButton>
                    </MudItem>
                }else
                {
                    <MudItem xs="12">
                        <MudButton OnClick="DeleteEquipment" Class="mb-n4" Variant="Variant.Filled" Color="Color.Error" FullWidth="true" data-test-id="extras-admin-extra-card-remove-button-definitly">Definitief verwijderen</MudButton>
                    </MudItem>
                    <MudItem xs="12">
                        <MudButton OnClick="ChangeWantToRemove" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Annuleren</MudButton>
                    </MudItem>
                }

            </MudGrid>
        </MudCardActions>
    </div>
</MudCard>

@code {

    [Inject]
    public IEquipmentService EquipmentService { get; set; } = default!;

    [Parameter]
    public string ImageUrl { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public List<string> Attributes { get; set; }

    [Parameter]
    public int EquipmentId { get; set; }

    [Parameter]
    public int Stock { get; set; }

    [Parameter]
    public decimal Price { get; set; }

    [Parameter]
    public bool IsActive { get; set; }

    [Parameter]
    public EventCallback UpdateItem { get; set; }

    [Parameter]
    public EventCallback RefreshOverviewPage{ get; set; }


    private bool wantToRemove = false;

    private void ChangeWantToRemove()
    {
        wantToRemove = !wantToRemove;
    }

    private async Task UpdateCard()
    {
        await UpdateItem.InvokeAsync(EquipmentId);
        await RefreshOverviewPage.InvokeAsync();
    }

    private async Task DeleteEquipment()
    {
        await EquipmentService.DeleteAsync(EquipmentId);
        await RefreshOverviewPage.InvokeAsync();
    }

    

}