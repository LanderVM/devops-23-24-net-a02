@page "/Formules"
@using shared.Formulas
@inject NavigationManager NavigationManager
@inject FormulaState FormulaState

<PageTitle>Formules</PageTitle>

<div Class="mt-5 mb-16">
    <MudPaper Width="100%" Class="pt-16" Height="100%" Elevation="0">
        <MudContainer MaxWidth="MaxWidth.Large">
            <Loader IsLoading=@(Formulas == null)>
                <MudGrid Spacing="@spacing">
                    @foreach (FormulaDto.Index item in Formulas)
                    {
                        @if (counter % 2 == 0)
                        {
                            <MudItem xs="12" md="4">
                                <FormulaCard Title=@item.Title
                                             BackgroundColor="#EDE7DB"
                                             Attributes=@item.Attributes
                                             Click=@(() =>{ FormulaState.ChosenFormulaId = item.Id; FormulaState.Title = item.Title; FormulaState.Attributes = item.Attributes; FormulaState.PricePerDayExtra = item.PricePerDayExtra; FormulaState.BasePrice = item.BasePrice; NavigateToEventdetails(); })>
                                </FormulaCard>
                            </MudItem>
                        }
                        else
                        {
                            <MudItem xs="12" md="4">
                                <FormulaCard BackgroundColor="#EBEBEB"
                                             Title=@item.Title
                                             Click=@(() =>{ FormulaState.ChosenFormulaId = item.Id; FormulaState.Title = item.Title; FormulaState.Attributes = item.Attributes; FormulaState.PricePerDayExtra = item.PricePerDayExtra; FormulaState.BasePrice = item.BasePrice; NavigateToEventdetails(); })
                                             MarginTop="mt-16"
                                             Attributes=@item.Attributes>
                                </FormulaCard>
                            </MudItem>
                        }
                        counter++;
                    }
                </MudGrid>
            </Loader>
        </MudContainer>
    </MudPaper>

</div>


@code {
    public int spacing { get; set; } = 6;

    private int counter = 1;

    [Inject]
    public IFormulaService FormulaService { get; set; } = default!;

    private IEnumerable<FormulaDto.Index>? Formulas = default!;

    protected override async Task OnInitializedAsync()
    {
        FormulaResult.Index response = await FormulaService.GetIndexAsync();
        Formulas = response.Formulas;
    }

    private void NavigateToEventdetails()
    {
        NavigationManager.NavigateTo(Routes.EventDetails);
    }
}