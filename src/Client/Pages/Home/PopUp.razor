@using shared.Quotations
@inject FormulaState FormulaState
@inject QuotationEstimateState QuotationEstimateState
@inject ExtraMaterialState ExtraMaterialState
@inject NavigationManager NavigationManager

<MudPopover Style="background-color: #C8A86E; color: white; margin-top: 90vh; position: fixed; margin-left: -10px; cursor: pointer;"
            Open="@_isOpen"
            Class="px-5 pt-5"
            @onclick="OpenSidePanel"
            AnchorOrigin="Origin.TopRight">
    <div class="d-flex flex-column">
        <MudText>Druk hier voor een snelle inschatting</MudText>
        <MudButton OnClick="@ToggleOpen" Class="ml-auto mr-n3 mb-1" Color="Color.Inherit">Close</MudButton>
    </div>
</MudPopover>

@code {

    [Inject]
    ISidepanelService Sidepanel { get; set; } = default!;

    [Inject]
    IQuotationService QuotationService { get; set; } = default!;

    public bool _isOpen = false;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        ToggleOpen();
    }

    public void ToggleOpen()
    {
        _isOpen = !_isOpen;
    }

    private void OpenSidePanel()
    {
        var callback1 = EventCallback.Factory.Create(this, Close);

        var parameters = new Dictionary<string, object>
        {
            { nameof(EstimatePriceForm.Close), callback1 }
        };

        Sidepanel.Open<EstimatePriceForm>("Prijs inschatting", "", parameters, BackdropType.Dismiss);
        ToggleOpen();
    }

    private void Close()
    {
        Sidepanel.Close();
    }

}