@using shared.Formulas
@inject NavigationManager NavigationManager
@inject FormulaState FormulaState

<MudContainer MaxWidth="MaxWidth.Large" id="cards">
    <MudGrid Justify="Justify.SpaceEvenly" Spacing="6">
        <Loader IsLoading=@(FormulasList == null)>
            @foreach (FormulaDto.Index item in FormulasList)
            {
                <MudItem lg="3" md="3" sm="6" xs="12" Class="mudItem">
                    <MudLink OnClick="@(() =>{ FormulaState.ChosenFormulaId = item.Id; FormulaState.Title = item.Title; FormulaState.Attributes = item.Attributes; FormulaState.PricePerDayExtra = item.PricePerDayExtra; FormulaState.BasePrice = item.BasePrice; NavigateToEventdetails(); })" Underline="Underline.None">
                        <MudCard Style="border: 1px solid #C8A86E">
                            <MudCardMedia Image="images/5.jpg" Height="200" />
                            <MudCardContent>
                                <MudText Color="Color.Primary" Style="text-align: center" Typo="Typo.h5">
                                    @item.Title <MudIconButton Href=@Routes.Formula Style="padding: 0; color: #9D9D9D" Icon="@Icons.Material.Filled.HelpOutline" aria-label="help"></MudIconButton>
                                </MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudLink>
                </MudItem>
            }

            <MudItem lg="3" md="3" sm="6" xs="12" Class="mudItem">
                <MudLink Href=@Routes.ExtraMaterialAdmin Underline="Underline.None">
                    <MudCard Style="border: 1px solid #C8A86E">
                        <MudCardMedia Image="images/7.jpg" Height="200" />
                        <MudCardContent>
                            <MudText Color="Color.Primary" Style="text-align: center" Typo="Typo.h5">Extra Materiaal</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudLink>
            </MudItem>
        </Loader>
    </MudGrid>
</MudContainer>

@code {
    [Inject]
    public IFormulaService FormulaService { get; set; } = default!;

    private IEnumerable<FormulaDto.Index>? FormulasList = default!;

    protected override async Task OnInitializedAsync()
    {
        FormulaResult.Index response = await FormulaService.GetIndexAsync();
        FormulasList = response.Formulas;
    }

    private void NavigateToEventdetails()
    {
        NavigationManager.NavigateTo(Routes.EventDetails);
    }
}