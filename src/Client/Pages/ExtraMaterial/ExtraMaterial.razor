@page "/aanvraag/extra-materiaal"
@using shared.Equipment
@inject NavigationManager NavigationManager
@inject ExtraMaterialState ExtraMaterialState

<PageTitle>Stap 3</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Style="margin-top: 4vw">
    <MudGrid Justify="Justify.SpaceEvenly">
        <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
            <MudItem lg="12" md="12" sm="5" xs="5">

            </MudItem>
            <MudItem lg="2" md="2" sm="7" xs="7">
                <TimeLineVertical step="3"></TimeLineVertical>
            </MudItem>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudItem lg="2" md="2" sm="2" xs="2">

            </MudItem>
            <MudItem lg="8" md="8" sm="8" xs="8">
                <TimeLineHorizontal step="3"></TimeLineHorizontal>
            </MudItem>
            <MudItem lg="2" md="2" sm="2" xs="2">

            </MudItem>
        </MudHidden>

        <MudItem lg="10" md="10" sm="12" xs="12">
            <MudGrid Spacing="@Spacing">
                <Loader IsLoading="@(Extras == null)">
                    @foreach (var item in Extras)
                    {
                        <MudItem lg="3" md="4" sm="6" xs="12">
                            <ExtraItemsCard EquipmentId="@item.Id"
                                            ImageUrl="@item.ImageData.ImageUrl"
                                            Title="@item.Title"
                                            Attributes="@item.Attributes"
                                            Stock="@item.Stock"
                                            Price="@item.Price">
                            </ExtraItemsCard>
                        </MudItem>
                    }
                </Loader>
            </MudGrid>

        </MudItem>
    </MudGrid>
    <MudGrid>
        <MudItem lg="2" md="2" sm="12" xs="12">

        </MudItem>
        <MudItem lg="4" md="4" sm="12" xs="12">

        </MudItem>
        <MudItem lg="4" md="4" sm="5" xs="5">

        </MudItem>
        <MudItem lg="2" md="2" sm="7" xs="7">
            <MudButton Class="mb-4 mt-6" Variant="Variant.Filled" Size="Size.Large" Color="Color.Primary" OnClick="@ClickVolgende">Volgende</MudButton>
        </MudItem>
    </MudGrid>


</MudContainer>


@code {

    [Inject]
    public IEquipmentService EquipmentService { get; set; } = default!;

    [Inject]
    public ISnackbar Snackbar { get; set; } = default!;

    [Inject]
    public FormulaState FormulaState { get; set; } = default!;

    [Inject]
    public EventDetailsState EventDetailsState { get; set; }

    [Inject]
    public PersonalDetailsState PersonalDetailsState { get; set; } = default!;


    private IEnumerable<EquipmentDto.Index>? Extras;

    private int Spacing { get; } = 2;

    private int number { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        var response = await EquipmentService.GetActiveEquipmentAsync();

        Extras = response.Equipment;

        if (FormulaState.ChosenFormulaId == null || FormulaState.ChosenFormulaId == 0 || PersonalDetailsState.Customer.Email.Email == null || EventDetailsState.FormattedAddress == null || EventDetailsState.dateRange == null)
        {
            NavigationManager.NavigateTo(Routes.Formula);
            Snackbar.Add("Gelieve uw offerteaanvraag opnieuw te beginnen.", Severity.Error);
        }
        if (ExtraMaterialState.ExtrasAmount.Count == 0)
        {
            foreach (var item in Extras)
            {
                ExtraMaterialState.ExtrasAmount.Add(item.Id, 0);
            }
        }
        else if (Extras.Count() > ExtraMaterialState.ExtrasAmount.Count)
        {
            foreach (var item in Extras)
            {
                if (!ExtraMaterialState.ExtrasAmount.ContainsKey(item.Id))
                {
                    ExtraMaterialState.ExtrasAmount.Add(item.Id, 0);
                }
            }
        }
    }

    private void ClickVolgende()
    {
        NavigationManager.NavigateTo(Routes.Overview);
    }

}