@inject ExtraMaterialState ExtraMaterialState

<MudCard>
    <MudCardMedia Image=@ImageUrl Height="250" />
    <MudCardContent>
        <MudText Typo="Typo.h5" Class="mb-2">@Title</MudText>
        @foreach(string i in Attributes) {
            <MudText Typo="Typo.body2" Class="mb-3">@i</MudText>
        }
        <MudText Typo="Typo.body2" Class="mb-3">€ @(Decimal.Round(Price, 2))/72uur</MudText>
        <MudGrid>
            @if (ExtraMaterialState.ExtrasAmount[EquipmentId] > 0)
            {
                <MudItem lg="6" md="6" sm="6" xs="6">
                    <MudNumericField @bind-Value="@ExtraMaterialState.ExtrasAmount[EquipmentId]" Variant="Variant.Outlined" Style="height:35px" Margin="Margin.Dense" Min="0" Max="@Stock" Step="1"></MudNumericField>
                </MudItem>
            }
            <MudItem lg="6" md="6" sm="6" xs="6">
                <MudText Typo="Typo.body2" Class="pt-2">@Stock in stock</MudText>
            </MudItem>
        </MudGrid>
    </MudCardContent>
    @if (ExtraMaterialState.ExtrasAmount[EquipmentId] == 0)
    {
        <MudCardActions>
            <MudButton OnClick="@(()=>{Increment(EquipmentId);})" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Voeg toe</MudButton>
        </MudCardActions>
    }
</MudCard>

@code {

    [Parameter]
    public string ImageUrl { get; set; }
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public List<string> Attributes { get; set; }
    [Parameter]
    public int EquipmentId { get; set; }
    [Parameter]
    public int Stock { get; set; }
    [Parameter]
    public decimal Price { get; set; }

    private void Increment(int key)
    {
        int count;
        ExtraMaterialState.ExtrasAmount.TryGetValue(key, out count);
        ExtraMaterialState.ExtrasAmount[key] = count + 1;
    }
}
